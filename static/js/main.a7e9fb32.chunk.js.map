{"version":3,"sources":["components/pagination/pagination.module.scss","components/game-card/game-card.module.scss","layout/layout.module.scss","components/list/list.module.scss","components/filter/filter.module.scss","components/header/header.module.scss","components/game-card/game-card.jsx","components/list/list.jsx","components/filter/filter.jsx","components/header/header.jsx","components/pagination/pagination.jsx","layout/layout.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameCard","imageSrc","name","modClass","className","cls","src","alt","List","games","favoriteGames","console","log","map","game","key","ID","ImageFullPath","Name","en","Filter","type","placeholder","id","value","Header","Pagination","pageNumber","Layout","state","slice","App","useState","setState","setFavoriteGames","favoritesRandomGames","useEffect","fetch","then","res","json","i","x","Math","random","length","toFixed","push","filter","some","someGame","sort","a","b","localeCompare","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7e9fb32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__34zSQ\",\"pagination__list\":\"pagination_pagination__list__cxqB3\",\"pagination__button\":\"pagination_pagination__button__3JRH2\",\"active\":\"pagination_active__2b0sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-card\":\"game-card_game-card__VPbcJ\",\"game-card--top\":\"game-card_game-card--top__g_7vF\",\"game-card__cover\":\"game-card_game-card__cover__1niCz\",\"game-card__image\":\"game-card_game-card__image__oh0r7\",\"game-card__title\":\"game-card_game-card__title__Bqbni\",\"game-card__button\":\"game-card_game-card__button__BsBQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__3efIc\",\"main\":\"layout_main__27FHg\",\"loader\":\"layout_loader__1x3Im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2KU14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__search\":\"filter_filter__search__3GxXN\",\"filter__number\":\"filter_filter__number__2NoIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__DfW31\",\"header__title\":\"header_header__title__dL1RF\"};","import React from \"react\";\nimport cls from './game-card.module.scss';\n\nfunction GameCard({ imageSrc, name, modClass }) {\n\treturn (\n\t\t<article className={` ${cls['game-card']} ${ modClass ? cls['game-card--top'] : null }`}>\n\t\t\t<div className={cls['game-card__cover']}>\n\t\t\t\t<img className={cls['game-card__image']} src={imageSrc} alt={`Изображение игры ${name}`}/>\n\t\t\t</div>\n\t\t\t<h3 className={cls['game-card__title']}>{name}</h3>\n\t\t\t<button className={cls['game-card__button']}>В избранное</button>\n\t\t</article>\n\t)\n}\n\nexport default GameCard\n","import React from \"react\";\nimport cls from './list.module.scss';\nimport GameCard from \"../game-card/game-card\";\n\nfunction List({games, favoriteGames}) {\n\tconsole.log(games[0]);\n\treturn (\n\t\t<ul className={cls['list']}>\n\n\t\t\t{favoriteGames.map( game => (\n\t\t\t\t\t<li className={cls['list__item']} key={game.ID}>\n\t\t\t\t\t\t<GameCard\n\t\t\t\t\t\t\timageSrc={game.ImageFullPath}\n\t\t\t\t\t\t\tname={game.Name.en} modClass={true}/>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t)}\n\n\t\t\t{games.map( game => (\n\t\t\t\t\t<li className={cls['list__item']} key={game.ID}>\n\t\t\t\t\t\t\t<GameCard\n\t\t\t\t\t\t\t\timageSrc={game.ImageFullPath}\n\t\t\t\t\t\t\t\tname={game.Name.en}/>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t)}\n\t\t</ul>\n\t)\n}\n\nexport default List\n","import React from \"react\";\nimport cls from './filter.module.scss';\n\nfunction Filter() {\n\tconst countElementsOnPage = [10, 30, 50];\n\n\treturn (\n\t\t<form className={cls['filter']}>\n\t\t\t<input className={cls['filter__search']} type=\"text\" placeholder='Поиск'/>\n\t\t\t<select className={cls['filter__number']} name=\"\" id=\"\">\n\t\t\t\t{countElementsOnPage.map( value => <option value={value} key={value}>{value}</option> )}\n\t\t\t</select>\n\t\t</form>\n\t)\n}\n\nexport default Filter\n","import React from \"react\";\nimport cls from './header.module.scss';\nimport Filter from \"../filter/filter\";\n\nfunction Header() {\n\n\treturn (\n\t\t<header className={cls['header']}>\n\t\t\t<h1 className={cls['header__title']}>Игры</h1>\n\t\t\t<Filter/>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from \"react\";\nimport cls from './pagination.module.scss';\n\nfunction Pagination() {\n\tconst pages = [1,2,3,4,5,6];\n\n\treturn (\n\t\t<div className={cls['pagination']}>\n\t\t\t<ul className={cls['pagination__list']}>\n\t\t\t\t<li className={cls['pagination__item']}>\n\t\t\t\t\t<button className={`${cls['pagination__button']} ${cls['pagination__button--prev']}`}>Назад</button>\n\t\t\t\t</li>\n\t\t\t\t{pages.map( pageNumber => (\n\t\t\t\t\t<li className={cls['pagination__item']} key={pageNumber}>\n\t\t\t\t\t\t<button className={cls['pagination__button']}>{pageNumber}</button>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t<li className={cls['pagination__item']}>\n\t\t\t\t\t<button className={`${cls['pagination__button']} ${cls['pagination__button--next']}`}>Вперед</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Pagination\n","import React from \"react\";\nimport cls from './layout.module.scss';\nimport List from \"../components/list/list\";\nimport Header from \"../components/header/header\";\nimport Pagination from \"../components/pagination/pagination\";\n\nfunction Layout({state, favoriteGames}) {\n\n\tif ( state ) {\n\t\treturn (\n\t\t\t<div className={cls['layout']}>\n\t\t\t\t<Header/>\n\t\t\t\t<main className={cls['main']}>\n\t\t\t\t\t<h2>Все игры</h2>\n\t\t\t\t\t<Pagination/>\n\t\t\t\t\t<List games={state.slice(0,100)} favoriteGames={favoriteGames}/>\n\t\t\t\t\t<Pagination/>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n\telse {\n\t\treturn <div className={cls['loader']}>Loading...</div>\n\t}\n}\n\nexport default Layout\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Layout from \"./layout/layout\";\n\nfunction App() {\n\n  const [state, setState] = useState(false);\n  const [favoriteGames, setFavoriteGames] = useState([]);\n  const favoritesRandomGames = [];\n\n  // function getRandomGame(min, max) {\n  //   return Math.random() * (max - min) + min;\n  // }\n\n  useEffect(()=> {\n    fetch('https://www.gbchip.com/api/v1/games')\n      .then(res => {  return res.json() })\n      .then(res => {\n        for (let i = 0; i < 5; i++) {\n          let x = (Math.random() * res.games.length).toFixed(0);\n          favoritesRandomGames.push( res.games[x] )\n        }\n        console.log(favoritesRandomGames)\n        setFavoriteGames(favoritesRandomGames);\n\n        const games = res.games.filter( game => (\n          favoritesRandomGames.some( someGame => someGame.Name.en !== game.Name.en )\n        )).sort( (a, b) => a.Name.en.localeCompare(b.Name.en) );\n\n        setTimeout(()=> setState(games), 1000);\n      })\n  }, []);\n\n  useEffect(()=> {\n    console.log(state)\n  },[state]);\n\n  useEffect(()=> {\n    console.log(favoritesRandomGames)\n  },[favoriteGames]);\n\n  return (\n    <Layout state={state} favoriteGames={favoriteGames}/>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}